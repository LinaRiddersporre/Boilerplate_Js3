{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linar\\\\OneDrive\\\\Skrivbord\\\\Portfolio\\\\Boilerplate_Js3\\\\Boilerplate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport stopWatch from \"./components/stopWatch/stopWatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [interval, setIntervalMethod] = useState(null);\n\n  const startCount = () => {\n    setIntervalMethod(setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n\n      if (seconds === 59) {\n        setSeconds(0);\n        setMinutes(minutes => minutes + 1);\n      }\n\n      if (minutes === 59) {\n        setMinutes(0);\n        setHours(hours => hours + 1);\n      }\n    }, 1000));\n  };\n\n  const pausCounting = () => {\n    clearInterval(interval);\n  }; // const reset = () => {\n  //   if(this.state.seconds >= 59){\n  //     this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes +1})\n  //     if(this.state.minutes >= 59){\n  //       this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour + 1})\n  //       if(this.state.hour >= 23){\n  //         this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour = 0})\n  //       }\n  //     }\n  //   }\n  // }\n\n\n  const resetTimer = () => {\n    setSeconds(0);\n    setMinutes(0);\n    setHours(0);\n    clearInterval(interval);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [this.state.hour, \":\", this.state.minutes, \":\", this.state.seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.startcount,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.paus && /*#__PURE__*/_jsxDEV(Hide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.pausCounting,\n        children: \"Paus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DSC9l3jRBUIrZGsUmrnnrZCmqik=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","stopWatch","App","seconds","setSeconds","minutes","setMinutes","hours","setHours","interval","setIntervalMethod","startCount","setInterval","pausCounting","clearInterval","resetTimer","state","hour","startcount","paus"],"sources":["C:/Users/linar/OneDrive/Skrivbord/Portfolio/Boilerplate_Js3/Boilerplate/src/App.js"],"sourcesContent":["import {useState} from \"react\"\r\nimport stopWatch from \"./components/stopWatch/stopWatch\";\r\n\r\nconst App = () => {\r\n  const [seconds, setSeconds] = useState(0)\r\n  const [minutes, setMinutes] = useState(0)\r\n  const [hours, setHours] = useState(0)\r\n  const [interval, setIntervalMethod] = useState(null)\r\n\r\n  const startCount = () => {\r\n    setIntervalMethod ( \r\n      setInterval(() => {\r\n        setSeconds (seconds => seconds + 1)\r\n        if(seconds === 59){\r\n          setSeconds(0)\r\n          setMinutes(minutes => minutes + 1)\r\n        }\r\n        if(minutes === 59){\r\n          setMinutes(0)\r\n          setHours(hours => hours + 1)\r\n        }\r\n      }, 1000))\r\n  }\r\n\r\n  const pausCounting = () => {\r\n    clearInterval(interval)\r\n    }\r\n    \r\n  // const reset = () => {\r\n  //   if(this.state.seconds >= 59){\r\n  //     this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes +1})\r\n  //     if(this.state.minutes >= 59){\r\n  //       this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour + 1})\r\n  //       if(this.state.hour >= 23){\r\n  //         this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour = 0})\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n \r\n  const resetTimer = () => {\r\n    setSeconds(0)\r\n    setMinutes(0)\r\n    setHours(0)\r\n    clearInterval(interval)\r\n  }\r\n\r\n  return(\r\n    <div className=\"divBody\">\r\n      \r\n      <h1>{this.state.hour}:{this.state.minutes}:{this.state.seconds}</h1>\r\n      <button onClick={this.startcount}>Start</button>\r\n      <div>\r\n        {this.state.paus && <Hide />}\r\n        <button onClick={this.pausCounting} >Paus</button>\r\n      </div>\r\n      <button onClick={this.resetTimer}>Reset</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACS,QAAD,EAAWC,iBAAX,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;;EAEA,MAAMW,UAAU,GAAG,MAAM;IACvBD,iBAAiB,CACfE,WAAW,CAAC,MAAM;MAChBR,UAAU,CAAED,OAAO,IAAIA,OAAO,GAAG,CAAvB,CAAV;;MACA,IAAGA,OAAO,KAAK,EAAf,EAAkB;QAChBC,UAAU,CAAC,CAAD,CAAV;QACAE,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;MACD;;MACD,IAAGA,OAAO,KAAK,EAAf,EAAkB;QAChBC,UAAU,CAAC,CAAD,CAAV;QACAE,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;MACD;IACF,CAVU,EAUR,IAVQ,CADI,CAAjB;EAYD,CAbD;;EAeA,MAAMM,YAAY,GAAG,MAAM;IACzBC,aAAa,CAACL,QAAD,CAAb;EACC,CAFH,CArBgB,CAyBhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMM,UAAU,GAAG,MAAM;IACvBX,UAAU,CAAC,CAAD,CAAV;IACAE,UAAU,CAAC,CAAD,CAAV;IACAE,QAAQ,CAAC,CAAD,CAAR;IACAM,aAAa,CAACL,QAAD,CAAb;EACD,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBAEE;MAAA,WAAK,KAAKO,KAAL,CAAWC,IAAhB,OAAuB,KAAKD,KAAL,CAAWX,OAAlC,OAA4C,KAAKW,KAAL,CAAWb,OAAvD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,KAAKe,UAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,WACG,KAAKF,KAAL,CAAWG,IAAX,iBAAmB,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADtB,eAEE;QAAQ,OAAO,EAAE,KAAKN,YAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAQE;MAAQ,OAAO,EAAE,KAAKE,UAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAzDD;;GAAMb,G;;KAAAA,G;AA2DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
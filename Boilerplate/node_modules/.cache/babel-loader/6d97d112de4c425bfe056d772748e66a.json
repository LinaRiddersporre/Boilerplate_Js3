{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linar\\\\OneDrive\\\\Skrivbord\\\\Portfolio\\\\Boilerplate_Js3\\\\Boilerplate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport StopWatch from \"./components/stopWatch/stopWatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let [seconds, setSeconds] = useState(0);\n  let [minutes, setMinutes] = useState(0);\n  let [hours, setHours] = useState(0);\n  const [interval, setIntervalMethod] = useState(null);\n\n  const startCount = () => {\n    setIntervalMethod(setInterval(() => {\n      setSeconds(seconds = seconds + 1);\n\n      if (seconds === 3) {\n        seconds = -1;\n        setMinutes(minutes => minutes + 1);\n      }\n\n      if (minutes === 3 && seconds === 3) {\n        console.log(minutes);\n        setMinutes(0);\n        setHours(hours => hours + 1);\n      }\n    }, 1000));\n  }; // count = () => {\n  //   if(this.state.seconds >= 59){\n  //     this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes +1})\n  //     if(this.state.minutes >= 59){\n  //       this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour + 1})\n  //       if(this.state.hour >= 23){\n  //         this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour = 0})\n  //       }\n  //     }\n  //   }\n  // }\n\n\n  const pausCounting = () => {\n    clearInterval(interval);\n  };\n\n  const resetTimer = () => {\n    setSeconds(0);\n    setMinutes(0);\n    setHours(0);\n    clearInterval(interval);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divBody\",\n    children: /*#__PURE__*/_jsxDEV(StopWatch, {\n      start: startCount,\n      pause: pausCounting,\n      reset: resetTimer,\n      seconds: seconds,\n      minutes: minutes,\n      hours: hours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DSC9l3jRBUIrZGsUmrnnrZCmqik=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","StopWatch","App","seconds","setSeconds","minutes","setMinutes","hours","setHours","interval","setIntervalMethod","startCount","setInterval","console","log","pausCounting","clearInterval","resetTimer"],"sources":["C:/Users/linar/OneDrive/Skrivbord/Portfolio/Boilerplate_Js3/Boilerplate/src/App.js"],"sourcesContent":["import {useState} from \"react\"\r\nimport StopWatch from \"./components/stopWatch/stopWatch\";\r\n\r\nconst App = () => {\r\n  let [seconds, setSeconds] = useState(0);\r\n  let [minutes, setMinutes] = useState(0);\r\n  let [hours, setHours] = useState(0);\r\n  const [interval, setIntervalMethod] = useState(null);\r\n\r\n  const startCount = () => {\r\n    setIntervalMethod ( \r\n      setInterval(() => {\r\n        setSeconds (seconds = seconds + 1)\r\n        if(seconds === 3){\r\n          seconds = -1\r\n          setMinutes(minutes => minutes + 1)\r\n        }\r\n        if(minutes === 3 && seconds === 3){\r\n              console.log(minutes)\r\n              setMinutes(0)\r\n              setHours(hours => hours + 1)\r\n          }\r\n        \r\n\r\n      }, 1000))\r\n  }\r\n\r\n  // count = () => {\r\n  //   if(this.state.seconds >= 59){\r\n  //     this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes +1})\r\n  //     if(this.state.minutes >= 59){\r\n  //       this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour + 1})\r\n  //       if(this.state.hour >= 23){\r\n  //         this.setState({seconds: this.state.seconds = 0, minutes: this.state.minutes = 0, hour: this.state.hour = 0})\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  const pausCounting = () => {\r\n    clearInterval(interval)\r\n    }\r\n \r\n  const resetTimer = () => {\r\n    setSeconds(0)\r\n    setMinutes(0)\r\n    setHours(0)\r\n    clearInterval(interval)\r\n  }\r\n\r\n  return(\r\n    <div className=\"divBody\">\r\n      <StopWatch\r\n        start = {startCount}\r\n        pause = {pausCounting}\r\n        reset = {resetTimer}\r\n        seconds = {seconds}\r\n        minutes = {minutes}\r\n        hours = {hours}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAApC;EACA,IAAI,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAApC;EACA,IAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACS,QAAD,EAAWC,iBAAX,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;;EAEA,MAAMW,UAAU,GAAG,MAAM;IACvBD,iBAAiB,CACfE,WAAW,CAAC,MAAM;MAChBR,UAAU,CAAED,OAAO,GAAGA,OAAO,GAAG,CAAtB,CAAV;;MACA,IAAGA,OAAO,KAAK,CAAf,EAAiB;QACfA,OAAO,GAAG,CAAC,CAAX;QACAG,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;MACD;;MACD,IAAGA,OAAO,KAAK,CAAZ,IAAiBF,OAAO,KAAK,CAAhC,EAAkC;QAC5BU,OAAO,CAACC,GAAR,CAAYT,OAAZ;QACAC,UAAU,CAAC,CAAD,CAAV;QACAE,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;MACH;IAGJ,CAbU,EAaR,IAbQ,CADI,CAAjB;EAeD,CAhBD,CANgB,CAwBhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMQ,YAAY,GAAG,MAAM;IACzBC,aAAa,CAACP,QAAD,CAAb;EACC,CAFH;;EAIA,MAAMQ,UAAU,GAAG,MAAM;IACvBb,UAAU,CAAC,CAAD,CAAV;IACAE,UAAU,CAAC,CAAD,CAAV;IACAE,QAAQ,CAAC,CAAD,CAAR;IACAQ,aAAa,CAACP,QAAD,CAAb;EACD,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,uBACE,QAAC,SAAD;MACE,KAAK,EAAIE,UADX;MAEE,KAAK,EAAII,YAFX;MAGE,KAAK,EAAIE,UAHX;MAIE,OAAO,EAAId,OAJb;MAKE,OAAO,EAAIE,OALb;MAME,KAAK,EAAIE;IANX;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA5DD;;GAAML,G;;KAAAA,G;AA8DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}